apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${project}-app
  name: ${project}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${project}-app
  strategy: { }
  template:
    metadata:
      labels:
        app: ${project}-app
    spec:
      hostAliases:
        - ip: "192.168.5.220"
          hostnames:
            - "dell-4290.local"
      containers:
        - name: ${project}
          image: localhost:32000/${project}:${branch}
          imagePullPolicy: "Always"
          env:
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: "/"
            - name: BRANCH
              value: ${branch}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8085
              httpHeaders:
                - name: Custom-Header
                  value: Awesome
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8085
            initialDelaySeconds: 30
            periodSeconds: 10

---

kind: Service
apiVersion: v1
metadata:
  name: ${project}
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8085'
    prometheus.io/path: '/actuator/prometheus'
spec:
  selector:
    app: ${project}-app
  ports:
    - port: 8085 # Default port for image

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${project}-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - ${host}.lth.guru
      secretName: tls-secret
  rules:
    - host: ${host}.lth.guru
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${project}
                port:
                  number: 8085

