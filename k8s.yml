apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${project}-app
  name: ${project}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${project}-app
  strategy: { }
  template:
    metadata:
      labels:
        app: ${project}-app
    spec:
      containers:
        - name: ${project}
          image: localhost:32000/${project}:${branch}
          env:
            - name: PROJECT
              value: ${project}
            - name: BRANCH
              value: ${branch}
          imagePullPolicy: "Always"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: ".25"
              memory: 500Mi

---

kind: Service
apiVersion: v1
metadata:
  name: ${project}
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/actuator/prometheus'
spec:
  selector:
    app: ${project}-app
  ports:
    - port: 5000 # Default port for image

---

kind: Service
apiVersion: v1
metadata:
  name: java-debug
spec:
  type: NodePort
  selector:
    app: ${project}-app
  ports:
    - port: 5005 # Debug port for image

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${project}-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - ${branch}.${project}.lth.guru
      secretName: tls-secret
  rules:
    - host: ${branch}.${project}.lth.guru
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${project}
                port:
                  number: 5000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${project}-local
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  rules:
    - host: ${branch}.${project}.local
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${project}
                port:
                  number: 5000

